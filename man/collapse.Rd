% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse.R
\name{collapse}
\alias{collapse}
\alias{iter_create_collapse}
\alias{iter_next_collapse}
\alias{iter_has_next_collapse}
\title{Collapse iterators}
\usage{
iter_create_collapse(spec)

iter_next_collapse(iter)

iter_has_next_collapse(iter)
}
\arguments{
\item{spec}{An object of class \code{\link{SpecIterCollapse}}.}

\item{iter}{A collapse iterator.}
}
\description{
A collapse iterator traverses array \code{self},
returning the indices for the associated cells
in array \code{oth}.
}
\details{
Arrays \code{self} and \code{oth} must both have at least
one dimension, and none of their dimensions can have length 0.

Arrays \code{self} and \code{oth} are related as follows:
\itemize{
\item \code{self} can have dimensions not in \code{oth},
  and \code{oth} can have dimensions not in \code{self},
  but \code{self} and \code{oth} must share at least
  one dimension.
\item A position on the \code{self} version of a shared
  dimension can map to zero or one positions on the \code{oth}
  version of the dimension.
\item A position on the \code{oth} version of a shared dimension
  must map to at least one position on the \code{self} version
  of the dimension, and can map to several.
}

If \code{oth} has extra dimensions that \code{self} does not,
then indices along these extra dimensions are included in the
return value from the iterator. If \code{oth} does not
have extra dimensions, then the return value has length 1.

\code{iter_create_collapse} creates a new iterator,
based on the information on arrays \code{self} and
\code{oth} contained in a \code{\link{SpecIterCollapse}}
object.

\code{iter_next_collapse} moves the iterator to
the next cell of \code{self}, and returns the
indices of the associated cell(s) in \code{oth}.

\code{iter_has_next_collapse} returns \code{FALSE}
if the iterator has reached the final cell of
\code{self}, and \code{TRUE} otherwise.
}
\examples{
spec <- SpecIterCollapse(dim_self = c(3, 2),
                         dim_oth = 2,
                         map_dim = c(1, 0),
                         map_pos = list(c(1, 2, 2), c(0, 0)))
iter <- iter_create_collapse(spec)
for (i in 1:6) {
    print(iter_has_next_collapse(iter))
    print(iter_next_collapse(iter))
}
iter_has_next_collapse(iter)
}
\seealso{
\code{\link{SpecIterCollapse}}, \code{\link{cohort}},
\code{\link{increment}}
}
