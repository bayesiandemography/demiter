% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/account.R
\name{account}
\alias{account}
\alias{iter_create_account}
\alias{iter_next_account}
\alias{iter_has_next_account}
\title{Account iterators}
\usage{
iter_create_account(spec)

iter_next_account(iter)

iter_has_next_account(iter)
}
\arguments{
\item{spec}{An object of class \code{\link{SpecIterAccount}}.}

\item{iter}{An account iterator.}
}
\value{
An integer vector of length 7.
}
\description{
An account iterator traverses an array of population counts,
returning the indices of arrays that contribute to each cell,
as specified by the demographic accounting equations.
}
\details{
The array \code{self} of population counts must have a time
dimension with a length of at least two. If the array has an
age dimension, that dimension must also have a length of at least
two.

The arrays contributing to each cell are as follows:
\describe{
  \item{\code{self}}{The population array \code{self} itself.
    Except in the first period, values of \code{self} at
    time \code{t} depend on values of \code{self} at time \code{t-1}.
  }
  \item{\code{initial}}{An array of initial population counts.
    \code{initial} has the same dimensions as \code{self},
    except that its time dimension has length 1.
  }
  \item{\code{births}}{An array of birth counts. Any dimensions with
    dimtype \code{"age"} or \code{"parent"} have been collapsed
    away. The time dimension is one element shorter than
    the time dimension of \code{self}.
  }
  \item{\code{no_triangle}}{An array of increments
    with no age or triangle dimensions. \code{no_triangle}
    only occurs when \code{self} has no age dimension. It has
    the same dimensions as \code{self}, except that its
    time dimension is one element shorter.
  }
  \item{\code{lower_triangle}}{An array of increments
    formed from lower Lexis triangles. \code{lower_triangle}
    only occurs when \code{self} has an age dimension. It has
    the same dimensions as \code{self}, except that its
    time dimension is one element shorter.
  }
  \item{\code{upper_triangle}}{An array of increments
    formed from upper Lexis triangles. \code{upper_triangle}
    only occurs when \code{self} has an age dimension. It has
    the same dimensions as \code{self}, except that its
    time dimension is one element shorter.
  }
}

If \code{self} has an age dimension, and if the current cell
belongs to the oldest age group, but not to the first time
point, then the cell receives contributions from two
cells in \code{self} and two cells in \code{upper_triangle}.

Function \code{iter_next_account} returns an integer vector
of length 8. The vector contains indices to cells in the following
arrays:
\enumerate{
  \item \code{self}
  \item \code{self} (oldest age group only)
  \item \code{initial} (first time point only)
  \item \code{no_triangle}
  \item \code{lower_triangle}
  \item \code{upper_triangle}
  \item \code{upper_triangle} (oldest age group only)
}
A zero in the integer vector implies that the current cell in
\code{self} does not receive any contribution from the associated
array. For any given cell, most entries in the vector are zero.

Arrays \code{no_triangle}, \code{lower_triangle} and \code{upper_triangle}
are typically assembled using a \code{\link{increment}} iterator.

In some applications, the demographic account may not have
increments or decrements, so arrays
\code{no_triangle}, \code{lower_triangle},
or \code{upper_triangle} may not exist. The account iterator
does not know or care about the existence of the arrays: it
returns indices for these arrays anyway.
The calling function is responsible for deciding whether to
process these indices.
}
\examples{
spec <- SpecIterAccount(dim = c(3, 3, 2, 4),
                        i_time = 4,
                        i_age = 2)
iter <- iter_create_account(spec)
for (i in 1:9) {
    print(iter_has_next_account(iter))
    print(iter_next_account(iter))
}
iter_has_next_account(iter)
}
\seealso{
\code{\link{SpecIterAccount}}, \code{\link{cohort}},
\code{\link{collapse}}, \code{\link{increment}}
}
